services:
  backend:
    build:
      context: ./backend/
      dockerfile: docker/dockerfile.backend
    image: backend:latest
    ports:
      - "9000:9000"
    env_file:
      - .env
    volumes:
      - ./backend:/home/app
    command: /bin/sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:9000"
    restart: always
    depends_on:
      - db
      - geoserver
  
  fast_backend:
    build:
      context: ./fast_backend
      dockerfile: DockerFile
    image: backend_fast:latest
    ports:
      - "7000:7000"
    env_file:
      - .fastdb.env
    volumes:
      - ./fast_backend:/home/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 7000 --log-level debug --reload
    restart: always
    depends_on:
      - fast_db
      - geoserver

      
    
  db:
    image: postgres:16-alpine
    ports:
      - "5440:5432"
    restart: always
    expose:
      - "5440"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
  fast_db:
    image: postgres:16-alpine
    ports:
      - "5450:5432"
    restart: always
    expose:
      - "5450"
    env_file:
      - .fastdb.env
    volumes:
      - postgres_cloud_data:/var/lib/postgresql/data

 
  geoserver:
    image: kartoza/geoserver:latest
    ports:
      - "9090:8080"
    restart: always
    volumes:
      - geoserver_data:/opt/geoserver/data_dir
      - ./backend/media:/opt/geoserver/medias

      
    environment:
      - ENABLE_CORS=true
      - CORS_ENABLED=true
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
      - CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,HEAD,OPTIONS
      - CORS_ALLOWED_HEADERS=*
      
      - TOMCAT_EXTRAS=true
      - HTTP_MAX_HEADER_SIZE=33554432
      - GEOSERVER_ADMIN_USER=admin
      - GEOSERVER_ADMIN_PASSWORD=geoserver
    env_file:
      - .env

volumes:
  postgres_data:
  postgres_cloud_data:
  geoserver_data: